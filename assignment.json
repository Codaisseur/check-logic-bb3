{
  "setup": "chmod +x ./check_logic/setup.sh; ./check_logic/setup.sh",
  "assignment": {
    "title": "User Input & the DOM",
    "description": "Send us the link with the repository with your work for today to see whether you reached all learning goals! We'll be checking your detail-page for the following things:",
    "score": "",
    "learningGoals": [
      {
        "goal": "Implement basic principles of clean coding in your app",
        "score": 0,
        "laws": [
          {
            "description": "HTML passes all validation rules",
            "test": "node check_logic/tests/ccHTML.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "CSS passes all validation rules",
            "test": "node check_logic/tests/ccCSS.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "Javasript is properly indented",
            "test": "node check_logic/tests/checkIndentation.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "`var` keyword is not used",
            "test": "node check_logic/tests/checkUseOfVar.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "No unused variables",
            "test": "node check_logic/tests/checkUnusedVars.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "Javascript is written in a separate file and imported in `detail-page.html`",
            "test": "node check_logic/tests/ccJSIsSeparate.js",
            "status": "Broken",
            "shellOutput": ""
          }
        ]
      },
      {
        "goal": "Implement DOM-methods to find, create and display DOM-elements",
        "score": 0,
        "laws": [
          {
            "description": "Find: `document.getElementById()` or `document.querySelector()` is being called",
            "test": "yarn jest check_logic/tests/domFindElement.test.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "Create: `document.createElement()` is being called",
            "test": "yarn jest check_logic/tests/domCreateElement.test.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "Display: `appendChild()` is being called",
            "test": "yarn jest check_logic/tests/domAppendChild.test.js",
            "status": "Broken",
            "shellOutput": ""
          }
        ]
      },
      {
        "goal": "Gather user data through a form and display it on the page",
        "score": 0,
        "laws": [
          {
            "description": "When adding a comment it displays on the page",
            "test": "yarn codeceptjs run --steps check_logic/tests/codeceptjs/formInput.test.js",
            "status": "Broken",
            "shellOutput": ""
          }
        ]
      },
      {
        "goal": "Use javascript functions to prevent users from submitting forms with invalid data",
        "score": 0,
        "laws": [
          {
            "description": "A comment without a name won't be displayed",
            "test": "yarn codeceptjs run --steps  check_logic/tests/codeceptjs/noAnonymousComments.test.js",
            "status": "Broken",
            "shellOutput": ""
          },
          {
            "description": "A comment without message will not be displayed",
            "test": "yarn codeceptjs run --steps  check_logic/tests/codeceptjs/noEmptyComments.test.js",
            "status": "Broken",
            "shellOutput": ""
          }
        ]
      }
    ]
  }
}
